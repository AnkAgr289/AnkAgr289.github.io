{"version":3,"sources":["Components/ClassSchedule.js","Components/CourseList.js","Components/Course.js","Components/Assessments.js","Components/UserAuth.js","App.js","serviceWorker.js","index.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","ClassSchedule","useState","course","setCourse","dourse","setDourse","units","setUnits","title","setTitle","moment","toDate","startDateState","setStartDate","endDate","setEndDate","login","setLogin","useContext","UserDetailsContext","UserNameContext","EdxTokenContext","MsAuthTokenContext","userEmails","setUserEmails","joinUrl","setJoinUrl","description","setDescription","open","setOpen","createRef","course_id","setCourseId","courses","setCourses","history","useHistory","useEffect","userName","undefined","edxToken","push","Axios","get","then","response","data","results","error","clearFields","className","onClick","variant","color","style","margin","console","log","marginTop","toString","id","value","e","copy","map","item","key","emailAddress","name","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","TextField","type","label","onChange","event","target","backgroundColor","borderRadius","borderWidth","borderColor","utils","MomentUtils","DateTimePicker","date","disablePast","width","minDate","alignContent","Autocomplete","options","getOptionLabel","option","alignSelf","newValue","unitBlocks","qs","headers","Authorization","usersResponse","usernames","forEach","user","usernameslist","index","arr","length","responseEmails","enrolledUsersEmail","address","email","depth","username","block_types_filter","blocks","Object","entries","unit","display_name","renderInput","params","onInputChange","syear","getFullYear","smonth","getMonth","padStart","sday","getDate","shours","getHours","sminutes","getMinutes","eyear","emonth","eday","ehours","eminutes","post","subject","body","contentType","content","start","dateTime","timeZone","end","location","displayName","attendees","isOnlineMeeting","onlineMeetingProvider","msAuthToken","onlineMeeting","tempUrl","raw_body","topic_id","CourseList","path","role","aria-label","navigateToCourseDetail","src","media","image","small","alt","aria-hidden","org","number","href","data-format","data-datetime","data-language","data-string","start_display","dir","Course","searchQuery","window","hash","state","setMsStreamLink","isStaff","isStreamLink","includes","inputStyle","padding","pathname","Assessment","assessementType","noAssessment","studentAssessmentLink","redirectToFormsView","assessement","frameBorder","marginWidth","marginHeight","allowFullScreen","UserAuth","setEdxToken","clientId","authCallback","err","authResponseWithAccessToken","accessToken","account","setMsAuthToken","grant_type","client_id","client_secret","token_type","access_token","edxUser","setUserName","edxTokenGenerator","redirectUri","graphScopes","createContext","App","Provider","basename","render","exact","to","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e7d2d3d5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport Axios from 'axios';\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\nimport { TextField } from '@material-ui/core';\r\nimport MicrosoftLogin from 'react-microsoft-login';\r\nimport * as qs from 'querystring';\r\nimport { SecondaryButton, PrimaryButton } from 'msteams-ui-components-react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport copy from 'copy-to-clipboard';\r\nimport { UserDetailsContext } from '../App';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ClassSchedule() {\r\n    const [course, setCourse] = useState('');\r\n    const [dourse, setDourse] = useState('');\r\n    const [units, setUnits] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [startDateState, setStartDate] = useState(moment().toDate());\r\n    const [endDate, setEndDate] = useState(moment().toDate())\r\n    const [token, setToken] = useState('');\r\n    const [account, setAccount] = useState({});\r\n    const [login, setLogin] = useState(0);\r\n    const [edxToken, setEdxToken] = useState('');\r\n    const { UserNameContext, EdxTokenContext, MsAuthTokenContext } = React.useContext(UserDetailsContext);\r\n    const [user, setUser] = useState({});\r\n    const [userEmails, setUserEmails] = useState([0]);\r\n    const [joinUrl, setJoinUrl] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    let linkRef = React.createRef();\r\n    let loginRef = React.createRef();\r\n    const [course_id,setCourseId]=useState('');\r\n    const [courses, setCourses] = useState(['']);\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!UserNameContext.userName\r\n            || UserNameContext.userName === null\r\n            || UserNameContext.userName === undefined\r\n            || !EdxTokenContext.edxToken\r\n            || EdxTokenContext.edxToken === null\r\n            || EdxTokenContext.edxToken === undefined) {\r\n            history.push('/login');\r\n        }\r\n\r\n        if(UserNameContext.userName !== \"Laxmi\"){\r\n            setLogin(10);\r\n        }\r\n\r\n        Axios.get(`https://edxvteam.com/api/courses/v1/courses`)\r\n            .then((response) => {\r\n                setCourses(response.data.results);\r\n            }, (error) => {\r\n                setLogin(6);\r\n            })\r\n\r\n        // Axios.get(`https://edxvteam.com/api/enrollment/v1/enrollments?username=${UserNameContext.userName}`, {\r\n        //     headers: {\r\n        //         Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n        //     }\r\n        // }).then((response) => {\r\n        //     console.log(response.data.results)\r\n        //     let userEnrolledCourses = response.data.results;\r\n        //     let enrolledCourseId = userEnrolledCourses.map((course) => course.course_id);\r\n        //     let enrolledCourses = [];\r\n        //     enrolledCourseId.forEach((id) => {\r\n        //         Axios.get(`https://edxvteam.com/api/courseware/course/${id}`, {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n        //             }\r\n        //         }).then((response) => { \r\n        //             enrolledCourses.push(response.data.results)\r\n        //         })\r\n        //     })\r\n        //     setCourses(enrolledCourses);\r\n        // });\r\n\r\n    }, []);\r\n\r\n    const addEvent = () => {\r\n        const syear = startDateState.getFullYear();\r\n        const smonth = (startDateState.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const sday = startDateState.getDate().toString().padStart(2, \"0\");\r\n        const shours = startDateState.getHours().toString().padStart(2, \"0\");\r\n        const sminutes = startDateState.getMinutes().toString().padStart(2, \"0\")\r\n        const eyear = endDate.getFullYear();\r\n        const emonth = (endDate.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const eday = endDate.getDate().toString().padStart(2, \"0\");\r\n        const ehours = endDate.getHours().toString().padStart(2, \"0\");\r\n        const eminutes = endDate.getMinutes().toString().padStart(2, \"0\")\r\n\r\n        Axios.post('https://graph.microsoft.com/v1.0/groups/48c4a928-f625-4837-90cc-4181c8b9191c/events'\r\n            ,\r\n            {\r\n                subject: title,\r\n                body: {\r\n                    contentType: \"HTML\",\r\n                    content: course + ' ' + dourse + '\\n' + description\r\n                },\r\n                start: {\r\n                    dateTime: `${syear}-${smonth}-${sday}T${shours}:${sminutes}:00`,\r\n                    timeZone: \"India Standard Time\"\r\n                },\r\n                end: {\r\n                    dateTime: `${eyear}-${emonth}-${eday}T${ehours}:${eminutes}:00`,\r\n                    timeZone: \"India Standard Time\"\r\n                },\r\n                location: {\r\n                    displayName: \"Microsoft team\"\r\n                },\r\n                attendees: userEmails,\r\n                isOnlineMeeting: true,\r\n                onlineMeetingProvider: \"teamsForBusiness\"\r\n            },\r\n            {\r\n                headers: { Authorization: `Bearer ${MsAuthTokenContext.msAuthToken}` }\r\n            }).then((response) => {\r\n                console.log(response);\r\n                setJoinUrl(response.data.onlineMeeting.joinUrl);\r\n                setLogin(3);\r\n                let tempUrl=response.data.onlineMeeting.joinUrl;\r\n                Axios.post('https://edxvteam.com/api/discussion/v1/threads/',{\r\n                    course_id: course_id,\r\n                    raw_body: `The class for ${course} titled ${title} for ${dourse} was successfully scheduled from ${startDateState.toString()} to ${endDate.toString()} at \\n ${tempUrl} \\n Additional Description: ${description}`,\r\n                    type: \"discussion\",\r\n                    title: title,\r\n                    topic_id: \"course\"\r\n                  },\r\n                  {\r\n                    headers:{\r\n                      Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n                    }\r\n                  }).then((response)=>{\r\n                    console.log(response);\r\n                  },(error)=>{console.log(error)})\r\n            }, (error) => {\r\n                console.log(error);\r\n                setLogin(6);\r\n            })\r\n    }\r\n\r\n    const courseChanged = (event, newValue) => {\r\n        var unitBlocks = {};\r\n        setCourse(newValue.name);\r\n        setCourseId(newValue.course_id);\r\n\r\n        //parallely\r\n        Axios.get('https://edxvteam.com/api/enrollment/v1/enrollments?' + qs.stringify({ course_id: newValue.course_id }), {\r\n            headers: {\r\n                Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n            }\r\n        }).then((response) => {\r\n\r\n            if (response.data.results !== undefined) {\r\n                let usersResponse = response.data.results;\r\n                let usernames = [];\r\n                usersResponse.forEach((item) => {\r\n                    usernames.push(item.user);\r\n                })\r\n\r\n                let usernameslist = '';\r\n                usernames.forEach((item, index, arr) => {\r\n                    if (index < usernames.length - 1)\r\n                        usernameslist = usernameslist + item + ',';\r\n                    else\r\n                        usernameslist = usernameslist + item;\r\n                });\r\n\r\n                Axios.get('https://edxvteam.com/api/user/v1/accounts?username=' + usernameslist,\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n                        }\r\n                    }).then((response) => {\r\n                        var responseEmails = response.data;\r\n                        var enrolledUsersEmail = [];\r\n                        responseEmails.forEach((item, index, responseEmails) => {\r\n                            enrolledUsersEmail.push({\r\n                                emailAddress: {\r\n                                    address: item.email,\r\n                                    name: item.name\r\n                                },\r\n                                type: \"required\"\r\n                            });\r\n                        });\r\n                        // //FOR TESTING Pushing the test email remove later\r\n                        // enrolledUsersEmail.push({\r\n                        //     emailAddress: {\r\n                        //         address: 'ankur@brickredsystems.ca',\r\n                        //         name: 'Ankur Agrawal'\r\n                        //     },\r\n                        //     type: \"required\"\r\n                        // });\r\n                        setUserEmails(enrolledUsersEmail);\r\n                    }, (error) => {\r\n                        setLogin(6);\r\n                    })\r\n            }\r\n        }, (error) => {\r\n            setLogin(6);\r\n        });\r\n        //parallely\r\n        Axios.get('https://edxvteam.com/api/courses/v1/blocks/?' + qs.stringify({\r\n            course_id: newValue.course_id,\r\n            depth: 'all',\r\n            username: UserNameContext.userName,\r\n            block_types_filter: 'discussion'\r\n        }), {\r\n            headers: {\r\n                Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n            }\r\n        }).then((response) => {\r\n\r\n            if (response.data.blocks !== undefined) {\r\n                var units = [];\r\n                unitBlocks = response.data.blocks;\r\n                let unitBlocksArray = Object.entries(unitBlocks);\r\n                unitBlocksArray.forEach((unit) => {\r\n                    //For demo purpose only using the index  \r\n                    if (unit[1].display_name !== undefined && unit[1].display_name !== \"\") {\r\n                        units.push(unit[1]);\r\n                    }\r\n                })\r\n                setUnits(units);\r\n            }\r\n        }, (error) => {\r\n            setLogin(6);\r\n        });\r\n    }\r\n\r\n    const clearFields = () => {\r\n        setCourse('');\r\n        setDourse('');\r\n        setDescription('');\r\n        setLogin(0)\r\n    }\r\n\r\n    if (login === 6)\r\n        return (<div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p className=\"header\">Error</p>\r\n            </header>\r\n            <div className=\"main\">\r\n                <p className=\"TextTitle\">A network error occured, try again</p>\r\n                <div className=\"HorizontalDivision\">\r\n                    <PrimaryButton onClick={clearFields} variant='contained' color='primary' style={{ margin: 30 }} >Try Again</PrimaryButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n        const navigateToEnrolledCourse = ((course) => {\r\n            console.log(course);\r\n            history.push('/courseList', { course })\r\n        })\r\n\r\n        if (login === 10)\r\n        return (<div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p className=\"header\">Schedule a class</p>\r\n            </header>\r\n            <div className=\"main\">\r\n                <p className=\"TextTitle\">You are not authorized to schedule the class</p>\r\n                <div className=\"HorizontalDivision\">\r\n                    <PrimaryButton onClick={navigateToEnrolledCourse} variant='contained' color='primary' style={{ margin: 30 }} >Navigate to enrolled courses</PrimaryButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n    const copyLink = (e) => {\r\n        copy(joinUrl);\r\n        setOpen(true);\r\n    }\r\n\r\n    if (login === 3)\r\n        return (<div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p className=\"header\">Scheduled Class</p>\r\n            </header>\r\n            <div className=\"main\">\r\n                <p className=\"TextTitle\">\r\n                    The class for '{course}' - '{dourse}' was successfully scheduled </p>\r\n                <p style={{ marginTop: 0 }}>{startDateState.toString()} to {endDate.toString()}</p>\r\n                <p><a ref={(ref) => linkRef = ref} id='joinlink' className=\"TextTitle\" value={joinUrl}\r\n                    onClick={copyLink}>Team meeting link</a></p>\r\n\r\n                <div>\r\n                    <p className=\"TextTitle\">Following enrolled users have been invited:</p>\r\n                    {\r\n                        userEmails.map((item) => {\r\n                            return (\r\n                                <p key={item.emailAddress}>{item.emailAddress.name}</p>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"HorizontalDivision\">\r\n                    <PrimaryButton onClick={clearFields} variant='contained' color='primary' style={{ margin: 30 }} >Schedule another Class</PrimaryButton>\r\n                </div>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Link Copied!\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        The link has been copied to your clipboard\r\n          </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(false)} color=\"primary\">\r\n                        Okay\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div>\r\n        )\r\n\r\n    return (\r\n        <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <p className=\"header\">Schedule a class</p>\r\n                </header>\r\n                <div className=\"main\">\r\n\r\n                    <div className=\"Division\">\r\n                        <TextField\r\n                            type='text'\r\n                            label='Enter the meeting title'\r\n                            variant='outlined'\r\n                            onChange={(event) => {\r\n                                setTitle(event.target.value);\r\n                            }}\r\n                            style={{ backgroundColor: 'rgba(255,255,255,0.9)', borderRadius: 10000, borderWidth: 5, borderColor: 'black' }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"HorizontalDivision\">\r\n                        <div className=\"AnotherDivision\">\r\n                            <p className=\"TextTitle\">From</p>\r\n                            <MuiPickersUtilsProvider utils={MomentUtils}  >\r\n                                <DateTimePicker\r\n                                    variant='dialog'\r\n                                    onChange={(date) => {\r\n                                        setStartDate(date.toDate())\r\n                                    }}\r\n                                    value={startDateState}\r\n                                    disablePast\r\n                                    style={{ width: '15vw' }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n                        <div className=\"AnotherDivision\">\r\n                            <p className=\"TextTitle\">To</p>\r\n                            <MuiPickersUtilsProvider utils={MomentUtils} >\r\n                                <DateTimePicker\r\n                                    variant='dialog'\r\n                                    minDate={startDateState}\r\n                                    value={endDate}\r\n                                    onChange={(date) => { setEndDate(date.toDate()) }}\r\n                                    style={{ width: '15vw', alignContent: 'center' }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Division'>\r\n                        <Autocomplete options={courses}\r\n                            getOptionLabel={(option) => option.name}\r\n                            style={{ width: '100%', margin: 0, alignSelf: 'center' }}\r\n                            //onInputChange={courseChanged}\r\n                            onChange={courseChanged}\r\n                            renderInput={(params) => <TextField {...params} label=\"Select the course\" variant=\"outlined\" />} />\r\n\r\n                    </div>\r\n                    <div className='Division'>\r\n                        <Autocomplete options={units}\r\n                            getOptionLabel={(option) => option.display_name}\r\n                            style={{ width: '100%', margin: 0, alignSelf: 'center' }}\r\n                            onInputChange={(event, newValue) => setDourse(newValue)}\r\n                            renderInput={(params) => <TextField {...params} label=\"Select course unit\" variant=\"outlined\" />} />\r\n                    </div>\r\n                    <div className=\"Division\">\r\n                        <TextField\r\n                            type='text'\r\n                            label='Enter additional description'\r\n                            variant='outlined'\r\n                            onChange={(event) => {\r\n                                setDescription(event.target.value);\r\n                            }}\r\n                            style={{ backgroundColor: 'rgba(255,255,255,0.9)', borderRadius: 10000, borderWidth: 5, borderColor: 'black' }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"HorizontalDivision\">\r\n                        <SecondaryButton onClick={clearFields} variant='contained' color='secondary' style={{ margin: 30 }} >Cancel</SecondaryButton>\r\n                        <PrimaryButton onClick={addEvent} variant='contained' color='primary' style={{ margin: 30 }} >Submit</PrimaryButton>\r\n                    </div>\r\n                </div>\r\n        <footer> Powered By VTeamLabs Open edX</footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClassSchedule;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../Course.css';\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserDetailsContext } from '../App';\r\n\r\nfunction CourseList() {\r\n    const [courses, setCourses] = useState([]);\r\n    const { UserNameContext, EdxTokenContext } = React.useContext(UserDetailsContext);\r\n    console.log(UserNameContext.userName)\r\n    let history = useHistory();\r\n    React.useEffect(() => {\r\n        if (!UserNameContext.userName\r\n            || UserNameContext.userName === null\r\n            || UserNameContext.userName === undefined\r\n            || !EdxTokenContext.edxToken\r\n            || EdxTokenContext.edxToken === null\r\n            || EdxTokenContext.edxToken === undefined) {\r\n            history.push('/login?course', { path : \"/CourseList\" });\r\n        }\r\n    }, []);\r\n\r\n    const navigateToCourseDetail = ((course) => {\r\n        console.log(course);\r\n        history.push(`/course?${UserNameContext.userName}/${course.id}`, { course })\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(UserNameContext.userName === \"Laxmi\"){\r\n        Axios.get('https://edxvteam.com/api/courses/v1/courses/')\r\n            .then((response) => {\r\n                let arr = response.data.results;\r\n                setCourses(arr);\r\n            }, (error) => {\r\n                // TODO - Remove once API works\r\n                let arr = [{ \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\" }, { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AedX%2BDemoX%2BDemo_Course\", \"effort\": null, \"end\": \"2021-06-04T23:30:00Z\", \"enrollment_start\": \"2020-06-01T05:00:00Z\", \"enrollment_end\": \"2021-06-04T23:30:00Z\", \"id\": \"course-v1:edX+DemoX+Demo_Course\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"small\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"large\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" } }, \"name\": \"Demonstration Course\", \"number\": \"DemoX\", \"org\": \"edX\", \"short_description\": \"\", \"start\": \"2020-06-01T05:00:00Z\", \"start_display\": \"June 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:edX+DemoX+Demo_Course\" }];\r\n                setCourses(arr);\r\n            })}\r\n            else if(UserNameContext.userName === \"Cristina\"){\r\n                let arr = [{ \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AedX%2BDemoX%2BDemo_Course\", \"effort\": null, \"end\": \"2021-06-04T23:30:00Z\", \"enrollment_start\": \"2020-06-01T05:00:00Z\", \"enrollment_end\": \"2021-06-04T23:30:00Z\", \"id\": \"course-v1:edX+DemoX+Demo_Course\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"small\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"large\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" } }, \"name\": \"Demonstration Course\", \"number\": \"DemoX\", \"org\": \"edX\", \"short_description\": \"\", \"start\": \"2020-06-01T05:00:00Z\", \"start_display\": \"June 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:edX+DemoX+Demo_Course\" }];\r\n                setCourses(arr);\r\n            }\r\n            else{\r\n                let arr = [{\"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\"}];\r\n                setCourses(arr);\r\n            }\r\n    }, []);\r\n\r\n    let course = courses.map((course) => {\r\n        return (\r\n            <li key={course.id} className=\"courses-listing-item\">\r\n                <article className=\"course\" id=\"course-v1:UniversityD+AI101+2020_T1\" role=\"region\" aria-label=\"Introduction to Artificial Intelligence\">\r\n                    <div onClick={() => navigateToCourseDetail(course)}>\r\n                        <header className=\"course-image\">\r\n                            <div className=\"cover-image\">\r\n                                <img src={course.media.image.small} alt={course.name} />\r\n                                <div className=\"learn-more\" aria-hidden=\"true\">LEARN MORE</div>\r\n                            </div>\r\n                        </header>\r\n                        <div className=\"course-info\" aria-hidden=\"true\">\r\n                            <h2 className=\"course-name\">\r\n                                <span className=\"course-organization\">{course.org}</span>\r\n                                <span className=\"course-code\">{course.number}</span>\r\n                                <span className=\"course-title\"><a href={`https://edxvteam.com/courses/${course.course_id}/about`}>{course.name}</a></span>\r\n                            </h2>\r\n\r\n                            <div className=\"course-date localized_datetime\"\r\n                                aria-hidden=\"true\" data-format=\"shortDate\"\r\n                                data-datetime=\"2020-09-01T00:00:00+0000\"\r\n                                data-language=\"en\"\r\n                                data-string=\"Starts: {date}\">{course.start_display}</div>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper main-container\" id=\"content\" dir=\"ltr\">\r\n                <main id=\"main\" aria-label=\"Content\">\r\n                    <section className=\"find-courses\">\r\n                        <section className=\"courses-container\">\r\n                            <header className=\"App-header\">\r\n                                <p className=\"header\">Enrolled Courses</p>\r\n                            </header>\r\n                            <div className=\"courses no-course-discovery\" role=\"region\" aria-label=\"List of Courses\">\r\n\r\n                                <ul style={{ margin: '0 30vh' }} className=\"courses-listing courses-list\">\r\n                                    {course}\r\n                                </ul>\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                </main>\r\n            </div>\r\n            <footer> Powered By VTeamLabs Open edX</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseList\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../Course.css';\r\nimport { TextField } from '@material-ui/core';\r\nimport { SecondaryButton, PrimaryButton } from 'msteams-ui-components-react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserDetailsContext } from '../App';\r\nimport Axios from 'axios';\r\n\r\nconst Course = ((props) => {\r\n    console.log(props);\r\n    const { UserNameContext, EdxTokenContext } = React.useContext(UserDetailsContext);\r\n    const searchQuery = window.location.hash;\r\n    let course = props && props.location && props.location.state &&\r\n        (props.location.state.course !== undefined || props.location.state.course !== null) ?\r\n        props.location.state.course :\r\n        //Fall back for demo purpose if directly landing on course page\r\n        { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\" };\r\n    // const [courses, setCourses] = useState([]);\r\n    const [msStreamLink, setMsStreamLink] = useState('');\r\n    let isStaff = false; // TODO - User data to tell\r\n    let isStreamLink = true; // TODO - EDX data to tell\r\n    let history = useHistory();\r\n\r\n    // DEMO purpose code\r\n    if (searchQuery.includes('Laxmi')) {\r\n        isStaff = true;\r\n        isStreamLink = false;\r\n    }\r\n\r\n    // DEMO purpose code\r\n    if (searchQuery.includes('University')) {\r\n        course = { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\" };\r\n    } else {\r\n        course = { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AedX%2BDemoX%2BDemo_Course\", \"effort\": null, \"end\": \"2021-06-04T23:30:00Z\", \"enrollment_start\": \"2020-06-01T05:00:00Z\", \"enrollment_end\": \"2021-06-04T23:30:00Z\", \"id\": \"course-v1:edX+DemoX+Demo_Course\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"small\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"large\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" } }, \"name\": \"Demonstration Course\", \"number\": \"DemoX\", \"org\": \"edX\", \"short_description\": \"\", \"start\": \"2020-06-01T05:00:00Z\", \"start_display\": \"June 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:edX+DemoX+Demo_Course\" }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    console.log(`Bearer ${EdxTokenContext.edxToken}`)\r\n    Axios.get('https://edxvteam.com/api/discussion/v1/threads/', {\r\n        course_id: course.id\r\n    },\r\n        {\r\n            headers: {\r\n                Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(response);\r\n        }, (error) => { console.log(error) })\r\n    // }, []);\r\n\r\n    const postStream = () => {\r\n        // TODO\r\n    }\r\n\r\n    const backToCourseList = () => {\r\n        history.push({\r\n            pathname: '/courseList'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper main-container\" id=\"content\" dir=\"ltr\">\r\n                <main id=\"main\" aria-label=\"Content\">\r\n                    <section className=\"find-courses\">\r\n                        <section className=\"courses-container\">\r\n                            <header className=\"App-header\">\r\n                                <p className=\"header\">Course Detail</p>\r\n                            </header>\r\n                            <div className=\"courses no-course-discovery\" role=\"region\" aria-label=\"List of Courses\">\r\n                                <div className=\"grid-container\">\r\n                                    <div className=\"grid-item\">Course organization</div>\r\n                                    <div className=\"grid-item\"> - </div>\r\n                                    <div className=\"grid-item\">{course.org}</div>\r\n                                    <div className=\"grid-item\">Course code</div>\r\n                                    <div className=\"grid-item\"> - </div>\r\n                                    <div className=\"grid-item\">{course.number}</div>\r\n                                    <div className=\"grid-item\">Course title</div>\r\n                                    <div className=\"grid-item\"> - </div>\r\n                                    <div className=\"grid-item\"><a href={`https://edxvteam.com/courses/${course.course_id}/about`}>{course.name}</a></div>\r\n                                    <div className=\"grid-item\">Scheduled meet</div>\r\n                                    <div className=\"grid-item\"> - </div>\r\n                                    <div className=\"grid-item\"><a href=\"#\">Meeting link</a></div>\r\n                                    <div className=\"grid-item\">Recorded</div>\r\n                                    <div className=\"grid-item\"> - </div>\r\n                                    <div className=\"grid-item\">{isStreamLink ? <a href=\"#\">MS Stream link</a> :\r\n                                        (isStaff ?\r\n                                            <TextField\r\n                                                color=\"white\"\r\n                                                type='text'\r\n                                                variant='outlined'\r\n                                                onChange={(event) => {\r\n                                                    setMsStreamLink(event.target.value);\r\n                                                }}\r\n                                                inputStyle={{ color: 'white', padding: '0px' }}\r\n                                                style={{ backgroundColor: 'rgba(255,255,255,0.9)', width: '500px', marginTop: '-15px', borderRadius: 10000, borderWidth: 5, borderColor: 'black' }}\r\n                                            />\r\n                                            : 'Not Available')}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"HorizontalDivision\">\r\n                                <SecondaryButton onClick={backToCourseList} variant='contained' color='secondary' style={{ margin: 30 }} >Back</SecondaryButton>\r\n\r\n                                    {isStaff && !isStreamLink && <PrimaryButton onClick={postStream} variant='contained' color='primary' style={{ margin: 30 }} >Post</PrimaryButton>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                </main>\r\n            </div>\r\n            <footer> Powered By VTeamLabs Open edX</footer>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Course\r\n","import React from 'react'\r\nimport '../App.css';\r\nimport { UserDetailsContext } from '../App';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Assessment() {\r\n    const { UserNameContext, EdxTokenContext, MsAuthTokenContext } = React.useContext(UserDetailsContext);\r\n    let history = useHistory();\r\n    React.useEffect(() => {\r\n        if (!UserNameContext.userName\r\n            || UserNameContext.userName === null\r\n            || UserNameContext.userName === undefined\r\n            || !EdxTokenContext.edxToken\r\n            || EdxTokenContext.edxToken === null\r\n            || EdxTokenContext.edxToken === undefined) {\r\n            history.push('/login?assessment', {path: '/assessment'});\r\n        }\r\n    }, []);\r\n\r\n    const isStaff = UserNameContext.userName === \"Laxmi\" ? true : false; // TODO - EDX API\r\n    console.log(UserNameContext.userName)\r\n    const assessementType = UserNameContext.userName === \"Cristina\" ? 'Demo' : 'AI';\r\n    console.log(assessementType)\r\n    let noAssessment = false;\r\n    // NOTE - Hardcoded links for Demo Perspective\r\n    const studentAssessmentLink = assessementType === 'Demo' ? 'https://forms.office.com/Pages/ResponsePage.aspx?id=ULWMLnqAXE6BzmsGdAtt_v8yq2Ma9E5FhW7OrIb03ElUM1pBU0tPQzE3UDgwT1NKSFg3NTNTNEk4WC4u&embed=true'\r\n        : (assessementType === 'AI' ? 'https://forms.office.com/Pages/ResponsePage.aspx?id=ULWMLnqAXE6BzmsGdAtt_v8yq2Ma9E5FhW7OrIb03ElUN1dLSUtRR0w0TE9GRFFDWlZSSk9YRDUwQy4u&embed=true' : \"No assessment\");\r\n\r\n    const redirectToFormsView = ((type) => {\r\n        if (type === 'Demo') {\r\n            window.open('https://forms.office.com/Pages/DesignPage.aspx?fragment=FormId%3DULWMLnqAXE6BzmsGdAtt_v8yq2Ma9E5FhW7OrIb03ElUM1pBU0tPQzE3UDgwT1NKSFg3NTNTNEk4WC4u%26Token%3D8b8e7de4eefd4cd8bddafb2dc02ccd74', \"_blank\");\r\n        }\r\n        if (type === 'AI') {\r\n            window.open('https://forms.office.com/Pages/DesignPage.aspx?fragment=FormId%3DULWMLnqAXE6BzmsGdAtt_v8yq2Ma9E5FhW7OrIb03ElUN1dLSUtRR0w0TE9GRFFDWlZSSk9YRDUwQy4u%26Token%3Dbbe298a6eb6c4c7fa7990b5fe2be84d3', \"_blank\");\r\n        }\r\n        else {\r\n            noAssessment = true;\r\n        }\r\n    })\r\n\r\n    const assessement = isStaff ?\r\n        <div>\r\n            {!noAssessment && \r\n            <div>\r\n            <a onClick={() => redirectToFormsView(\"AI\" )}><p className=\"assessmentText\">{\"Artificial Intelligence Assessment\"}</p></a>\r\n            <a onClick={() => redirectToFormsView(\"Demo\")}><p className=\"assessmentText\">{\"Demo Assessment\"}</p></a>\r\n            </div>}\r\n            {noAssessment ? <p className=\"assessment\">{\"No assessment\"}</p> : <p className=\"assessment\">{\"Assessment will be viewed in different tab\"}</p>}\r\n        </div>\r\n        : studentAssessmentLink === \"No assessment\" ? <p className=\"assessmentText\">{\"No assessment\"}</p> :\r\n            <iframe title={assessementType} src={studentAssessmentLink} frameBorder=\"0\" marginWidth=\"0\" marginHeight=\"0\" className=\"assessmentFrame\" allowFullScreen> </iframe>\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p className=\"header\">Assessment</p>\r\n            </header>\r\n            <div className=\"main\">\r\n                {assessement}\r\n            </div>\r\n            <footer> Powered By VTeamLabs Open edX</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Assessment\r\n","import React, { useState, useEffect } from 'react';\r\nimport MicrosoftLogin from \"react-microsoft-login\";\r\nimport Axios from 'axios';\r\nimport * as qs from 'querystring';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserDetailsContext } from '../App';\r\n\r\nconst UserAuth = (props) => {\r\n    const searchQuery = window.location.hash;\r\n    const [edxToken, setEdxToken] = useState('');\r\n    const { UserNameContext, EdxTokenContext, MsAuthTokenContext } = React.useContext(UserDetailsContext);\r\n    let history = useHistory();\r\n\r\n    let path = props && props.location && props.location.state &&\r\n        (props.location.state.path !== undefined || props.location.state.path !== null) ?\r\n        props.location.state.path : '/baseform';\r\n\r\n    // DEMO purpose code\r\n    if(searchQuery.includes('assessment')){\r\n        path = '/assessment';\r\n    }\r\n    else if (searchQuery.includes('course'))\r\n        path = '/CourseList';\r\n    else{\r\n        path = '/baseform';\r\n    }\r\n\r\n    const edxTokenGenerator = (account) => {\r\n        return Axios.post('https://edxvteam.com/oauth2/access_token',\r\n            qs.stringify(\r\n                {\r\n                    grant_type: \"client_credentials\",\r\n                    client_id: \"8vD6pKAbjTfgdEtNAKqdUwu0X6Ps574kyBh94Om0\",\r\n                    client_secret: \"ERRuuGZPMsEy8hjBHjFaMZsmDR3SRhXndOjgoiqEseor1p18kktkHSdUExFNFoKlTdWrmrtz2Oc0NyVa9fNASLuckPPRJY0uCXwkg7yEbRfUg8e0rfGetaGt7tuqUqRo\",\r\n                    token_type: \"Bearer\"\r\n                }\r\n            ),\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            }).then((response) => {\r\n                EdxTokenContext.setEdxToken(response.data.access_token)\r\n                setEdxToken(response.data.access_token);\r\n                console.log(EdxTokenContext.edxToken);\r\n                console.log(edxToken);\r\n                Axios.get('https://edxvteam.com/api/user/v1/accounts?email=' + account.userName,\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${response.data.access_token}`\r\n                        }\r\n                    })\r\n                    .then((response) => {\r\n                        let edxUser = response.data[0];\r\n\r\n                        if (account.userName === \"Cristina@vteamlabs.com\") {\r\n                            UserNameContext.setUserName(\"Cristina\");\r\n                        }\r\n                        else if (account.userName === \"Jones@vteamlabs.com\") {\r\n                            UserNameContext.setUserName(\"Jones\");\r\n                        }\r\n                        else {\r\n                            UserNameContext.setUserName(edxUser.username);\r\n                        }\r\n                        console.log(UserNameContext.userName)\r\n                        history.push(path)\r\n                    }, (error) => {\r\n                        console.log(error)\r\n                    })\r\n            }, (error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const authHandler = (err, data) => {\r\n        try {\r\n            const { accessToken, account } = data.authResponseWithAccessToken;\r\n            console.log(account.userName)\r\n            if (accessToken !== null) {\r\n                MsAuthTokenContext.setMsAuthToken(accessToken);\r\n                edxTokenGenerator(account);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (<MicrosoftLogin\r\n        clientId={'c4e63d26-dcf1-4d0a-bac1-ae0bc5afca83'}\r\n        authCallback={authHandler} redirectUri={'https://ankagr289.github.io/#/login'}\r\n        graphScopes={['Calendars.ReadWrite', 'Group.ReadWrite.All']} />)\r\n};\r\n\r\nexport default UserAuth","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  HashRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ClassSchedule from './Components/ClassSchedule';\r\nimport CourseList from './Components/CourseList';\r\nimport Course from './Components/Course';\r\nimport Assessment from './Components/Assessments';\r\nimport UserAuth from './Components/UserAuth';\r\n\r\nexport const UserDetailsContext = React.createContext(null);\r\n\r\nfunction App() {\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [edxToken, setEdxToken] = React.useState('');\r\n  const [msAuthToken, setMsAuthToken] = React.useState('');\r\n  const UserNameContext = { userName, setUserName };\r\n  const EdxTokenContext = { edxToken, setEdxToken };\r\n  const MsAuthTokenContext = { msAuthToken, setMsAuthToken };\r\n\r\n  return (\r\n    <Router>\r\n      {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. Use a <Switch> any time\r\n          you have multiple routes, but you want only one\r\n          of them to render at a time\r\n        */}\r\n      <UserDetailsContext.Provider value={{ UserNameContext, EdxTokenContext, MsAuthTokenContext }}>\r\n        {/* <Switch>\r\n          <Route path=\"/login\"\r\n              render={(props) => <UserAuth {...props} />}>\r\n            </Route>\r\n          <Route exact path=\"/baseform\">\r\n            <ClassSchedule />\r\n          </Route>\r\n          <Route path=\"/CourseList\">\r\n            <CourseList />\r\n          </Route>\r\n          <Route path=\"/Course\"\r\n            render={(props) => <Course {...props} />}\r\n          >\r\n          </Route>\r\n          <Route path=\"/assessment\">\r\n            <Assessment />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/baseform\" />\r\n          </Route>\r\n\r\n        </Switch> */}\r\n        <HashRouter basename=\"/\">\r\n          <div>\r\n            {/* <ul>\r\n              <li><Link to=\"/\">Home</Link></li>\r\n              <li><Link to=\"/about\">About</Link></li>\r\n            </ul>\r\n            <Link\r\n              to={{\r\n                pathname: \"/Course\",\r\n                search: \"?sort=name\",\r\n                hash: \"#the-hash\",\r\n                state: { course : ...props }\r\n              }}\r\n            /> */}\r\n\r\n\r\n            <Route path=\"/login\"\r\n              render={(props) => <UserAuth {...props} />}>\r\n            </Route>\r\n            <Route exact path=\"/baseform\">\r\n              <ClassSchedule />\r\n            </Route>\r\n            <Route path=\"/CourseList\">\r\n              <CourseList />\r\n            </Route>\r\n            <Route path=\"/Course\"\r\n              render={(props) => <Course {...props} />}\r\n            >\r\n            </Route>\r\n            <Route path=\"/assessment\">\r\n              <Assessment />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/baseform\" />\r\n            </Route>\r\n          </div>\r\n        </HashRouter>\r\n      </UserDetailsContext.Provider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["Components/ClassSchedule.js","Components/CourseList.js","Components/Course.js","Components/Assessments.js","Components/UserAuth.js","App.js","serviceWorker.js","index.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","ClassSchedule","useState","course","setCourse","unit","setUnit","units","setUnits","topicId","setTopicId","topic","setTopic","topics","setTopics","title","setTitle","moment","toDate","startDateState","setStartDate","endDate","setEndDate","login","setLogin","useContext","UserDetailsContext","UserNameContext","EdxTokenContext","MsAuthTokenContext","userEmails","setUserEmails","joinUrl","setJoinUrl","description","setDescription","open","setOpen","createRef","course_id","setCourseId","courses","setCourses","history","useHistory","useEffect","userName","undefined","edxToken","push","Axios","get","headers","Authorization","then","response","console","log","data","userEnrolledCourses","clearFields","className","onClick","variant","color","style","margin","marginTop","toString","id","value","e","copy","map","item","key","emailAddress","name","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","TextField","type","label","onChange","event","target","backgroundColor","borderRadius","borderWidth","borderColor","utils","MomentUtils","DateTimePicker","date","disablePast","width","minDate","alignContent","Autocomplete","options","getOptionLabel","option","course_details","course_name","alignSelf","newValue","qs","results","usersResponse","usernames","forEach","user","usernameslist","index","arr","length","responseEmails","enrolledUsersEmail","address","email","error","encodeURI","courseware_topics","renderInput","params","children","onInputChange","syear","getFullYear","smonth","getMonth","padStart","sday","getDate","shours","getHours","sminutes","getMinutes","eyear","emonth","eday","ehours","eminutes","post","subject","body","contentType","content","start","dateTime","timeZone","end","location","displayName","attendees","isOnlineMeeting","onlineMeetingProvider","msAuthToken","onlineMeeting","tempUrl","raw_body","toLocaleString","toLocaleTimeString","topic_id","CourseList","path","enrolledCourseDetails","enrolledcourse","class","src","media","image","small","alt","org","number","start_display","navigateToCourseDetail","aria-hidden","Course","isRecordingLink","setIsRecordingLink","meetDetail","setMeetDetail","recordDetail","setRecordDetail","searchQuery","window","hash","msStreamLink","setMsStreamLink","isStaff","courseId","split","text_search","meet","record","inputStyle","padding","thread_id","href","dangerouslySetInnerHTML","__html","rendered_body","Assessment","assessementType","noAssessment","studentAssessmentLink","redirectToFormsView","assessement","frameBorder","marginWidth","marginHeight","allowFullScreen","UserAuth","state","includes","userDetails","access_token","edxUser","setUserName","username","clientId","authCallback","err","authResponseWithAccessToken","accessToken","account","setMsAuthToken","client_id","setEdxToken","edxTokenGenerator","redirectUri","graphScopes","createContext","App","Provider","basename","render","exact","to","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2a99f40e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport Axios from 'axios';\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\nimport { TextField } from '@material-ui/core';\r\nimport { SecondaryButton, PrimaryButton } from 'msteams-ui-components-react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport copy from 'copy-to-clipboard';\r\nimport { UserDetailsContext } from '../App';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as qs from 'querystring';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ClassSchedule() {\r\n    const [course, setCourse] = useState('');\r\n    const [unit, setUnit] = useState('');\r\n    const [units, setUnits] = useState([]);\r\n    const [topicId, setTopicId] = useState([]);\r\n    const [topic, setTopic] = useState([]);\r\n    const [topics, setTopics] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [startDateState, setStartDate] = useState(moment().toDate());\r\n    const [endDate, setEndDate] = useState(moment().toDate())\r\n    const [login, setLogin] = useState(0);\r\n    const { UserNameContext, EdxTokenContext, MsAuthTokenContext } = React.useContext(UserDetailsContext);\r\n    const [user, setUser] = useState({});\r\n    const [userEmails, setUserEmails] = useState([0]);\r\n    const [joinUrl, setJoinUrl] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    let linkRef = React.createRef();\r\n    let loginRef = React.createRef();\r\n    const [course_id, setCourseId] = useState('');\r\n    const [courses, setCourses] = useState(['']);\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!UserNameContext.userName\r\n            || UserNameContext.userName === null\r\n            || UserNameContext.userName === undefined\r\n            || !EdxTokenContext.edxToken\r\n            || EdxTokenContext.edxToken === null\r\n            || EdxTokenContext.edxToken === undefined) {\r\n            history.push('/login');\r\n        }\r\n\r\n        if (UserNameContext.userName !== \"Laxmi\") {\r\n            setLogin(10);\r\n        }\r\n\r\n        // Axios.get(`https://edxvteam.com/api/courses/v1/courses`)\r\n        //     .then((response) => {\r\n        //         setCourses(response.data.results);\r\n        //     }, (error) => {\r\n        //         setLogin(6);\r\n        //     })\r\n\r\n        Axios.get(`https://edxvteam.com/api/enrollment/v1/enrollment`, {\r\n            headers: {\r\n                Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            let userEnrolledCourses = response.data; // Object.assign({}, );\r\n            // let enrolledCourseId = userEnrolledCourses.map((course) => course.course_id);\r\n            // let enrolledCourses = [];\r\n            // enrolledCourseId.forEach((id) => {\r\n            //     Axios.get(`https://edxvteam.com/api/courseware/course/${id}`, {\r\n            //         headers: {\r\n            //             Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n            //         }\r\n            //     }).then((response) => { \r\n            //         enrolledCourses.push(response.data.results)\r\n            //     })\r\n            // })\r\n\r\n            setCourses(userEnrolledCourses);\r\n        });\r\n\r\n    }, []);\r\n\r\n    const addEvent = () => {\r\n        const syear = startDateState.getFullYear();\r\n        const smonth = (startDateState.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const sday = startDateState.getDate().toString().padStart(2, \"0\");\r\n        const shours = startDateState.getHours().toString().padStart(2, \"0\");\r\n        const sminutes = startDateState.getMinutes().toString().padStart(2, \"0\")\r\n        const eyear = endDate.getFullYear();\r\n        const emonth = (endDate.getMonth() + 1).toString().padStart(2, \"0\");\r\n        const eday = endDate.getDate().toString().padStart(2, \"0\");\r\n        const ehours = endDate.getHours().toString().padStart(2, \"0\");\r\n        const eminutes = endDate.getMinutes().toString().padStart(2, \"0\")\r\n\r\n        Axios.post('https://graph.microsoft.com/v1.0/groups/48c4a928-f625-4837-90cc-4181c8b9191c/events'\r\n            ,\r\n            {\r\n                subject: title,\r\n                body: {\r\n                    contentType: \"HTML\",\r\n                    content: course + ' ' + unit + '\\n' + description\r\n                },\r\n                start: {\r\n                    dateTime: `${syear}-${smonth}-${sday}T${shours}:${sminutes}:00`,\r\n                    timeZone: \"India Standard Time\"\r\n                },\r\n                end: {\r\n                    dateTime: `${eyear}-${emonth}-${eday}T${ehours}:${eminutes}:00`,\r\n                    timeZone: \"India Standard Time\"\r\n                },\r\n                location: {\r\n                    displayName: \"Microsoft team\"\r\n                },\r\n                attendees: userEmails,\r\n                isOnlineMeeting: true,\r\n                onlineMeetingProvider: \"teamsForBusiness\"\r\n            },\r\n            {\r\n                headers: { Authorization: `Bearer ${MsAuthTokenContext.msAuthToken}` }\r\n            }).then((response) => {\r\n                console.log(response);\r\n                setJoinUrl(response.data.onlineMeeting.joinUrl);\r\n                setLogin(3);\r\n                let tempUrl = response.data.onlineMeeting.joinUrl;\r\n                Axios.post('https://edxvteam.com/api/discussion/v1/threads/', {\r\n                    course_id: course_id,\r\n                    raw_body: `[Team meeting][1] ${startDateState.toLocaleString()} - ${endDate.toLocaleTimeString()} \\n\\n [1]:${tempUrl}`,\r\n                    type: \"discussion\",\r\n                    title: title,\r\n                    topic_id: topicId\r\n                },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n                        }\r\n                    }).then((response) => {\r\n                        console.log(response);\r\n                    }, (error) => { console.log(error) })\r\n            }, (error) => {\r\n                console.log(error);\r\n                setLogin(6);\r\n            })\r\n    }\r\n\r\n    const courseChanged = (event, newValue) => {\r\n        var unitBlocks = {};\r\n        setCourse(newValue.course_details.course_name);\r\n        setCourseId(newValue.course_details.course_id);\r\n        setUnit('');\r\n\r\n        //parallely\r\n        Axios.get('https://edxvteam.com/api/enrollment/v1/enrollments?' + qs.stringify({ course_id: newValue.course_details.course_id }), {\r\n            headers: {\r\n                Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n            }\r\n        }).then((response) => {\r\n\r\n            if (response.data.results !== undefined) {\r\n                let usersResponse = response.data.results;\r\n                let usernames = [];\r\n                usersResponse.forEach((item) => {\r\n                    usernames.push(item.user);\r\n                })\r\n\r\n                let usernameslist = '';\r\n                usernames.forEach((item, index, arr) => {\r\n                    if (index < usernames.length - 1)\r\n                        usernameslist = usernameslist + item + ',';\r\n                    else\r\n                        usernameslist = usernameslist + item;\r\n                });\r\n\r\n                Axios.get('https://edxvteam.com/api/user/v1/accounts?username=' + usernameslist,\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n                        }\r\n                    }).then((response) => {\r\n                        var responseEmails = response.data;\r\n                        var enrolledUsersEmail = [];\r\n                        responseEmails.forEach((item, index, responseEmails) => {\r\n                            enrolledUsersEmail.push({\r\n                                emailAddress: {\r\n                                    address: item.email,\r\n                                    name: item.name\r\n                                },\r\n                                type: \"required\"\r\n                            });\r\n                        });\r\n                        // //FOR TESTING Pushing the test email remove later\r\n                        // enrolledUsersEmail.push({\r\n                        //     emailAddress: {\r\n                        //         address: 'ankur@brickredsystems.ca',\r\n                        //         name: 'Ankur Agrawal'\r\n                        //     },\r\n                        //     type: \"required\"\r\n                        // });\r\n                        setUserEmails(enrolledUsersEmail);\r\n                    }, (error) => {\r\n                        setLogin(6);\r\n                    })\r\n            }\r\n        }, (error) => {\r\n            setLogin(6);\r\n        });\r\n        //parallely\r\n        Axios.get('https://edxvteam.com/api/discussion/v1/course_topics/' + encodeURI(newValue.course_details.course_id)\r\n            , {\r\n                headers: {\r\n                    Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n                }\r\n            }).then((response) => {\r\n                setUnits(response.data.courseware_topics);\r\n\r\n            }, (error) => {\r\n                setLogin(6);\r\n            });\r\n    }\r\n\r\n    const unitChanged = (event, newValue) => {\r\n        setTopics(newValue.children);\r\n    }\r\n\r\n    const topicChanged = (event, newValue) => {\r\n        setTopicId(newValue.id);\r\n    }\r\n\r\n    const clearFields = () => {\r\n        setCourse('');\r\n        setUnit('');\r\n        setDescription('');\r\n        setLogin(0)\r\n    }\r\n\r\n    if (login === 6)\r\n        return (<div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p className=\"header\">Error</p>\r\n            </header>\r\n            <div className=\"main\">\r\n                <p className=\"TextTitle\">A network error occured, try again</p>\r\n                <div className=\"HorizontalDivision\">\r\n                    <PrimaryButton onClick={clearFields} variant='contained' color='primary' style={{ margin: 30 }} >Try Again</PrimaryButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n    const navigateToEnrolledCourse = ((course) => {\r\n        console.log(course);\r\n        history.push('/courseList', { course })\r\n    })\r\n\r\n    //if (login === 10)\r\n        // return (<div className=\"App\">\r\n        //     <header className=\"App-header\">\r\n        //         <p className=\"header\">Schedule a class</p>\r\n        //     </header>\r\n        //     <div className=\"main\">\r\n        //         <p className=\"TextTitle\">You are not authorized to schedule the class</p>\r\n        //         <div className=\"HorizontalDivision\">\r\n        //             <PrimaryButton onClick={navigateToEnrolledCourse} variant='contained' color='primary' style={{ margin: 30 }} >Navigate to enrolled courses</PrimaryButton>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n        // )\r\n\r\n        if (login === 10)\r\n        return (<div className=\"main-content\">\r\n\r\n\r\n        <div className=\"content-part\">\r\n            <div className=\"container-fluid\">\r\n        \r\n                <h3 className=\"heading-strip\"> Schedule a Class</h3>\r\n                <div className=\"class-form\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                        You are not authorized to schedule the class\r\n                        </div>\r\n                        <PrimaryButton onClick={navigateToEnrolledCourse} variant='contained' color='primary' style={{ margin: 30 }} >Navigate to enrolled courses</PrimaryButton>\r\n        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/* <footer> Powered By VTeamLabs Open edX</footer> */}\r\n        </div>\r\n        )\r\n\r\n        \r\n\r\n    const copyLink = (e) => {\r\n        copy(joinUrl);\r\n        setOpen(true);\r\n    }\r\n\r\n    // if (login === 3)\r\n    //     return (<div className=\"App\">\r\n    //         <header className=\"App-header\">\r\n    //             <p className=\"header\">Scheduled Class</p>\r\n    //         </header>\r\n    //         <div className=\"main\">\r\n    //             <p className=\"TextTitle\">\r\n    //                 The class for '{course} - {unit} - {topic}' was successfully scheduled </p>\r\n    //             <p style={{ marginTop: 0 }}>{startDateState.toString()} to {endDate.toString()}</p>\r\n    //             <p><a ref={(ref) => linkRef = ref} id='joinlink' className=\"TextTitle\" value={joinUrl}\r\n    //                 onClick={copyLink}>Team meeting link</a></p>\r\n    //             <div>\r\n    //                 <p className=\"TextTitle\">Following enrolled users have been invited:</p>\r\n    //                 {\r\n    //                     userEmails.map((item) => {\r\n    //                         return (\r\n    //                             <p key={item.emailAddress}>{item.emailAddress.name}</p>\r\n    //                         )\r\n    //                     })\r\n    //                 }\r\n    //             </div>\r\n    //             <div className=\"HorizontalDivision\">\r\n    //                 <PrimaryButton onClick={clearFields} variant='contained' color='primary' style={{ margin: 30 }} >Schedule another Class</PrimaryButton>\r\n    //             </div>\r\n    //         </div>\r\n    //         <Dialog\r\n    //             open={open}\r\n    //             TransitionComponent={Transition}\r\n    //             keepMounted\r\n    //             aria-labelledby=\"alert-dialog-slide-title\"\r\n    //             aria-describedby=\"alert-dialog-slide-description\"\r\n    //         >\r\n    //             <DialogTitle id=\"alert-dialog-slide-title\">{\"Link Copied!\"}</DialogTitle>\r\n    //             <DialogContent>\r\n    //                 <DialogContentText id=\"alert-dialog-slide-description\">\r\n    //                     The link has been copied to your clipboard\r\n    //       </DialogContentText>\r\n    //             </DialogContent>\r\n    //             <DialogActions>\r\n    //                 <Button onClick={() => setOpen(false)} color=\"primary\">\r\n    //                     Okay\r\n    //       </Button>\r\n    //             </DialogActions>\r\n    //         </Dialog>\r\n\r\n    //     </div>\r\n    //     )\r\n    if (login === 3)\r\n    return (<div className=\"App\">\r\n        <div className=\"main-content\">\r\n\r\n\r\n<div className=\"content-part\">\r\n<div className=\"container-fluid\">\r\n\r\n    <h3 className=\"heading-strip\"> Scheduled Class</h3>\r\n    <div className=\"class-form\">\r\n    <p className=\"TextTitle\">\r\n                The class for '{course} - {unit} - {topic}' was successfully scheduled </p>\r\n            <p style={{ marginTop: 0 }}>{startDateState.toString()} to {endDate.toString()}</p>\r\n            <p><a ref={(ref) => linkRef = ref} style={{color:'rgb(169,39,109)'}} id='joinlink' className=\"TextTitle\" value={joinUrl}\r\n                onClick={copyLink}>Team meeting link</a></p>\r\n            <div>\r\n                <p className=\"TextTitle\">Following enrolled users have been invited:</p>\r\n                {\r\n                    userEmails.map((item) => {\r\n                        return (\r\n                            <p key={item.emailAddress}>{item.emailAddress.name}</p>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"HorizontalDivision\">\r\n                <PrimaryButton onClick={clearFields} variant='contained' color='primary' style={{ margin: 30 }} >Schedule another Class</PrimaryButton>\r\n            </div>\r\n    </div>\r\n</div>\r\n</div>\r\n{/* <footer> Powered By VTeamLabs Open edX</footer> */}\r\n</div>\r\n        <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">{\"Link Copied!\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    The link has been copied to your clipboard\r\n      </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => setOpen(false)} color=\"primary\">\r\n                    Okay\r\n      </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    </div>\r\n    )\r\n    return (\r\n        <div className=\"main-content\">\r\n\r\n\r\n            <div className=\"content-part\">\r\n                <div className=\"container-fluid\">\r\n\r\n                    <h3 className=\"heading-strip\"> Schedule a Class</h3>\r\n                    <div className=\"class-form\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <TextField\r\n                                \r\n                                    type='text'\r\n                                    label='Enter the meeting title'\r\n                                    variant='outlined'\r\n                                    onChange={(event) => {\r\n                                        setTitle(event.target.value);\r\n                                    }}\r\n                                    style={{ backgroundColor: 'rgba(255,255,255,0.9)', borderRadius: 10000, borderWidth: 5, borderColor: 'black' }}\r\n                                />      </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-left\"> <label>From: </label>  <MuiPickersUtilsProvider utils={MomentUtils}  >\r\n                                    <DateTimePicker\r\n                                        variant='dialog'\r\n                                        onChange={(date) => {\r\n                                            setStartDate(date.toDate())\r\n                                        }}\r\n                                        value={startDateState}\r\n                                        disablePast\r\n                                        style={{ width: '15vw' }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider> </div>\r\n                                <div className=\"form-right\"> <label>To: </label>   <MuiPickersUtilsProvider utils={MomentUtils} >\r\n                                    <DateTimePicker\r\n                                        variant='dialog'\r\n                                        minDate={startDateState}\r\n                                        value={endDate}\r\n                                        onChange={(date) => { setEndDate(date.toDate()) }}\r\n                                        style={{ width: '15vw', alignContent: 'center' }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider> </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Autocomplete options={courses}\r\n                                    getOptionLabel={(option) => option.course_details.course_name}\r\n                                    style={{ width: '100%', margin: 0, alignSelf: 'center' }}\r\n                                    //onInputChange={courseChanged}\r\n                                    onChange={courseChanged}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Select the course\" variant=\"outlined\" />} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n\r\n                                <Autocomplete options={units}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    style={{ width: '100%', margin: 0, alignSelf: 'center' }}\r\n                                    onChange={unitChanged}\r\n                                    onInputChange={(event, newValue) => setUnit(newValue)}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Select course section\" variant=\"outlined\" />} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n\r\n                                <Autocomplete options={topics}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    style={{ width: '100%', margin: 0, alignSelf: 'center' }}\r\n                                    onChange={topicChanged}\r\n                                    onInputChange={(event, newValue) => setTopic(newValue)}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Select course unit\" variant=\"outlined\" />} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <TextField\r\n                                    type='text'\r\n                                    label='Enter additional description'\r\n                                    variant='outlined'\r\n                                    onChange={(event) => {\r\n                                        setDescription(event.target.value);\r\n                                    }}\r\n                                    style={{ backgroundColor: 'rgba(255,255,255,0.9)', borderRadius: 10000, borderWidth: 5, borderColor: 'black' }}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            {/* <button onClick={addEvent} className=\"btn btn-default primary-button\">Submit</button>\r\n                            <button onClick={clearFields} className=\"btn btn-default secondary-button\">Cancel</button> */}\r\n{/* <SecondaryButton onClick={clearFields} variant='contained' color='secondary' className=\"btn btn-default secondary-button\" style={{ margin: 30 }} >Cancel</SecondaryButton> */}\r\n                    <PrimaryButton onClick={addEvent} className=\"btn btn-default primary-button\" variant='contained' color='primary'  >Submit</PrimaryButton>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <footer> Powered By VTeamLabs Open edX</footer> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClassSchedule;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserDetailsContext } from '../App';\r\n\r\nfunction CourseList() {\r\n    const [courses, setCourses] = useState([]);\r\n    const { UserNameContext, EdxTokenContext } = React.useContext(UserDetailsContext);\r\n    console.log(UserNameContext.userName)\r\n    let history = useHistory();\r\n    React.useEffect(() => {\r\n        if (!UserNameContext.userName\r\n            || UserNameContext.userName === null\r\n            || UserNameContext.userName === undefined\r\n            || !EdxTokenContext.edxToken\r\n            || EdxTokenContext.edxToken === null\r\n            || EdxTokenContext.edxToken === undefined) {\r\n            history.push('/login?course', { path: \"/CourseList\" });\r\n        }\r\n    }, []);\r\n\r\n    const navigateToCourseDetail = ((course) => {\r\n        console.log(course);\r\n        history.push(`/course?${course.id}`, { course })\r\n    })\r\n\r\n    useEffect(() => {\r\n        // if(UserNameContext.userName === \"Laxmi\"){\r\n        // Axios.get('https://edxvteam.com/api/courses/v1/courses/')\r\n        //     .then((response) => {\r\n        //         let arr = response.data.results;\r\n        //         setCourses(arr);\r\n        //     }, (error) => {\r\n        //         // TODO - Remove once API works\r\n        //         let arr = [{ \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\" }, { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AedX%2BDemoX%2BDemo_Course\", \"effort\": null, \"end\": \"2021-06-04T23:30:00Z\", \"enrollment_start\": \"2020-06-01T05:00:00Z\", \"enrollment_end\": \"2021-06-04T23:30:00Z\", \"id\": \"course-v1:edX+DemoX+Demo_Course\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"small\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"large\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" } }, \"name\": \"Demonstration Course\", \"number\": \"DemoX\", \"org\": \"edX\", \"short_description\": \"\", \"start\": \"2020-06-01T05:00:00Z\", \"start_display\": \"June 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:edX+DemoX+Demo_Course\" }];\r\n        //         setCourses(arr);\r\n        //     })}\r\n        //     else if(UserNameContext.userName === \"Cristina\"){\r\n        //         let arr = [{ \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AedX%2BDemoX%2BDemo_Course\", \"effort\": null, \"end\": \"2021-06-04T23:30:00Z\", \"enrollment_start\": \"2020-06-01T05:00:00Z\", \"enrollment_end\": \"2021-06-04T23:30:00Z\", \"id\": \"course-v1:edX+DemoX+Demo_Course\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"small\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"large\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" } }, \"name\": \"Demonstration Course\", \"number\": \"DemoX\", \"org\": \"edX\", \"short_description\": \"\", \"start\": \"2020-06-01T05:00:00Z\", \"start_display\": \"June 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:edX+DemoX+Demo_Course\" }];\r\n        //         setCourses(arr);\r\n        //     }\r\n        //     else{\r\n        //         let arr = [{\"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\"}];\r\n        //         setCourses(arr);\r\n        //     }\r\n\r\n        Axios.get(`https://edxvteam.com/api/enrollment/v1/enrollment`, {\r\n            headers: {\r\n                Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            let userEnrolledCourses = response.data;\r\n            Axios.get('https://edxvteam.com/api/courses/v1/courses/')\r\n                .then((response) => {\r\n                    let courses = response.data.results;\r\n                    let enrolledCourseDetails = [];\r\n                    courses.map((course) => {\r\n                        userEnrolledCourses.forEach((enrolledcourse) => {\r\n                            if (course.id === enrolledcourse.course_details.course_id) {\r\n                                enrolledCourseDetails.push(course);\r\n                            }\r\n                        }\r\n\r\n                        )\r\n                    });\r\n                    setCourses(enrolledCourseDetails);\r\n                }, (error) => {\r\n                    // TODO - Remove once API works\r\n                    let arr = [{ \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\" }, { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AedX%2BDemoX%2BDemo_Course\", \"effort\": null, \"end\": \"2021-06-04T23:30:00Z\", \"enrollment_start\": \"2020-06-01T05:00:00Z\", \"enrollment_end\": \"2021-06-04T23:30:00Z\", \"id\": \"course-v1:edX+DemoX+Demo_Course\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"small\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"large\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" } }, \"name\": \"Demonstration Course\", \"number\": \"DemoX\", \"org\": \"edX\", \"short_description\": \"\", \"start\": \"2020-06-01T05:00:00Z\", \"start_display\": \"June 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:edX+DemoX+Demo_Course\" }];\r\n                    setCourses(arr);\r\n                })\r\n        });\r\n\r\n    }, []);\r\n\r\n    let course = courses.map((course) => {\r\n        return (\r\n            <li key={course.id}>\r\n                <div class=\"box-detail\">\r\n                    <div class=\"box-detail-top\">\r\n                        <figure>\r\n                            <img src={course.media.image.small} alt={course.name} />\r\n                        </figure>\r\n                        <h4>\r\n                            {course.org}\r\n                        </h4>\r\n                    </div>\r\n                    <div class=\"box-detail-bottom\">\r\n                        <h5>{course.name} </h5>\r\n                        <span class=\"space\"></span>\r\n                        <p class=\"name\">{course.number} </p>\r\n                        <p class=\"date\">{course.start_display} </p>\r\n                    </div>\r\n                    <a onClick={() => navigateToCourseDetail(course)} class=\"button\">View Course  <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></a>\r\n                </div>\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <div class=\"main-content\">\r\n                <div class=\"content-part\">\r\n                    <div class=\"container-fluid\">\r\n                        <h3 class=\"heading-strip\"> Enrolled Courses</h3>\r\n                        <div class=\"box-1\">\r\n                            <ul>{course}</ul>\r\n                        </div>\r\n                    </div></div></div>\r\n            {/* <footer> Powered By VTeamLabs Open edX</footer> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseList\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { SecondaryButton, PrimaryButton } from 'msteams-ui-components-react';\r\nimport * as qs from 'querystring';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserDetailsContext } from '../App';\r\nimport Axios from 'axios';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Course = ((props) => {\r\n    console.log(props);\r\n\r\n    const [course, setCourse] = useState([]);\r\n    const [view, setView] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [isRecordingLink, setIsRecordingLink] = useState(false);\r\n    const [meetDetail, setMeetDetail] = useState([]);\r\n    const { UserNameContext, EdxTokenContext } = React.useContext(UserDetailsContext);\r\n    const [recordDetail, setRecordDetail] = useState([]);\r\n    const searchQuery = window.location.hash;\r\n    // let course = props && props.location && props.location.state &&\r\n    //     (props.location.state.course !== undefined || props.location.state.course !== null) ?\r\n    //     props.location.state.course :\r\n    //     //Fall back for demo purpose if directly landing on course page\r\n    //     { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\" };\r\n    // const [courses, setCourses] = useState([]);\r\n    const [msStreamLink, setMsStreamLink] = useState('');\r\n    let isStaff = false; // TODO - User data to tell\r\n    let history = useHistory();\r\n\r\n    // DEMO purpose code\r\n    if (UserNameContext.userName === 'Laxmi') {\r\n        isStaff = true;\r\n    }\r\n\r\n    const courseId = searchQuery.split('?')[1];\r\n\r\n    // DEMO purpose code\r\n    // if (searchQuery.includes('University')) {\r\n    //     course = { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AUniversityD%2BAI101%2B2020_T1\", \"effort\": \"04:00\", \"end\": \"2020-09-30T23:30:00Z\", \"enrollment_start\": \"2020-08-15T00:00:00Z\", \"enrollment_end\": \"2020-09-15T23:30:00Z\", \"id\": \"course-v1:UniversityD+AI101+2020_T1\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"small\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\", \"large\": \"https://edxvteam.com/asset-v1:UniversityD+AI101+2020_T1+type@asset+block@11276.jpg\" } }, \"name\": \"Introduction to Artificial Intelligence\", \"number\": \"AI101\", \"org\": \"UniversityD\", \"short_description\": \"Short Description of the course on Artificial Intelligence from UniversityD\", \"start\": \"2020-09-01T00:00:00Z\", \"start_display\": \"Sept. 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:UniversityD+AI101+2020_T1\" };\r\n    // } else {\r\n    //     course = { \"blocks_url\": \"https://edxvteam.com/api/courses/v1/blocks/?course_id=course-v1%3AedX%2BDemoX%2BDemo_Course\", \"effort\": null, \"end\": \"2021-06-04T23:30:00Z\", \"enrollment_start\": \"2020-06-01T05:00:00Z\", \"enrollment_end\": \"2021-06-04T23:30:00Z\", \"id\": \"course-v1:edX+DemoX+Demo_Course\", \"media\": { \"course_image\": { \"uri\": \"/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" }, \"course_video\": { \"uri\": null }, \"image\": { \"raw\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"small\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\", \"large\": \"https://edxvteam.com/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg\" } }, \"name\": \"Demonstration Course\", \"number\": \"DemoX\", \"org\": \"edX\", \"short_description\": \"\", \"start\": \"2020-06-01T05:00:00Z\", \"start_display\": \"June 1, 2020\", \"start_type\": \"timestamp\", \"pacing\": \"instructor\", \"mobile_available\": false, \"hidden\": false, \"invitation_only\": false, \"course_id\": \"course-v1:edX+DemoX+Demo_Course\" }\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.get(`https://edxvteam.com/api/courses/v1/courses/${courseId}`)\r\n            .then((response) => {\r\n                let courses = response.data;\r\n                //const value = courses.filter((course) => courseId === course.id);\r\n                setCourse(courses);\r\n            })\r\n        console.log(`Bearer ${EdxTokenContext.edxToken}`)\r\n\r\n        Axios.get('https://edxvteam.com/api/discussion/v1/threads/?' + qs.stringify({ course_id: courseId, text_search: \"teams.microsoft.com\" }),\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n                }\r\n            }).then((response) => {\r\n                console.log(response);\r\n                const meet = response.data.results[0] ? response.data.results[0] : \"No meeting scheduled\";\r\n                setMeetDetail(meet);\r\n                if (meet.id) {\r\n                    Axios.get('https://edxvteam.com/api/discussion/v1/comments/?thread_id=' + meet.id,\r\n                        {\r\n                            headers: {\r\n                                Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n                            }\r\n                        }).then((response) => {\r\n                            const record = response.data.results[0] ? response.data.results[0] : \"No meeting scheduled\";\r\n                            setRecordDetail(record);\r\n                            setIsRecordingLink(record && record.id ? true : false)\r\n                        })\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }, []);\r\n\r\n    const postStream = () => {\r\n        // TODO \r\n        Axios.post('https://edxvteam.com/api/discussion/v1/comments/',\r\n            {\r\n                thread_id: meetDetail.id,\r\n                raw_body: `[MS Stream recording][1] \\n\\n [1]:${msStreamLink}`\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${EdxTokenContext.edxToken}`\r\n                }\r\n            }).then((response) => {\r\n                console.log(response);\r\n                const record = response.data ? response.data : \"No meeting scheduled\";\r\n                setRecordDetail(record);\r\n                setIsRecordingLink(record && record.id ? true : false)\r\n                setOpen(true);\r\n            }, (error) => { console.log(error) })\r\n\r\n    }\r\n\r\n    const backToCourseList = () => {\r\n        history.push({\r\n            pathname: '/courseList'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"main-content\">\r\n                <div className=\"content-part\">\r\n                    <div className=\"container-fluid\">\r\n                        <h3 className=\"heading-strip\"> Course Detail</h3>\r\n                        <div className=\"course-info-content\">\r\n                            <div className=\"course-header\">\r\n                                <div className=\"course-header-left\">\r\n                                    <h3>{course.name} </h3>\r\n                                    <p>Understand how the FDA regulates pharmaceuticals and explore debates on prescription drug costs,\r\nmarketing, and testing. </p>\r\n                                </div>\r\n                                <div className=\"course-header-right\">\r\n                                <img src=\"images/info-right.jpg\"/>\r\n\r\n                                {/* {isStaff && !isRecordingLink  ?\r\n                                            <TextField\r\n                                                color=\"white\"\r\n                                                type='text'\r\n                                                variant='outlined'\r\n                                                onChange={(event) => {\r\n                                                    setMsStreamLink(event.target.value);\r\n                                                }}\r\n                                                inputStyle={{ color: 'white', padding: '0px' }}\r\n                                                style={{ backgroundColor: 'rgba(255,255,255,0.9)', width: '400px', marginTop: '-15px', borderRadius: 10000, borderWidth: 5, borderColor: 'black' }}\r\n                                            />: \"\"} */}\r\n                                    {/* <img src={course.media.image.small} alt={course.name} /> */}\r\n                                {/* <a onClick={backToCourseList}>Back to enrolled courses</a> */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"course-middle\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <p><img src=\"images/ico_time.jpg\" />\r\n                                            Length: <strong>8 Weeks </strong>\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p><img src=\"images/ico_meter.jpg\" />\r\n                                                Effort: <strong>2-5 Hours per week </strong>\r\n                                        </p>\r\n                                    </li>\r\n\r\n                                    <li>\r\n                                        <p><img src=\"images/ico_level.jpg\" />\r\n                                                    Level: <strong>Beginner </strong>\r\n                                        </p>\r\n                                    </li>\r\n\r\n                                    <li>\r\n                                        <p><img src=\"images/ico_price.jpg\" />\r\n                                            <strong>Enrolled</strong>\r\n                                        </p>\r\n                                    </li>\r\n\r\n                                </ul>\r\n\r\n\r\n                            </div>\r\n\r\n                            <div class=\"course-bottom\">\r\n                                <div class=\"course-bottom-left\">\r\n                                    <h4>About this course </h4>\r\n                                    <p>Prescription drugs are among the most common health care interventions and have turnedsome once-fatal diseases into manageable conditions — but they have also been a growing source of controversy. Patients in the US struggle with increasing costs and express concerns about whymany conditions,such as Alzheimer’s disease, remain without adequate therapeutic options. </p>\r\n\r\n                                    <p>At the center of these debates lies the US Food and Drug Administration (FDA), a federal agency responsible for monitoring the prescription drug marketplace and enforcing basic rules and laws that affect how prescription drugs are discovered, developed, and sold. </p>\r\n\r\n                                    <p>This course investigates the major issues affecting the regulatory approval and evidence-based use of prescription drugs. You willlearn the rules and regulationsg  </p>\r\n                                    \r\n                                    <div className=\"grid-item\">{\r\n                                        (isStaff && !isRecordingLink ?\r\n                                            <TextField\r\n                                                color=\"white\"\r\n                                                type='text'\r\n                                                variant='outlined'\r\n                                                onChange={(event) => {\r\n                                                    setMsStreamLink(event.target.value);\r\n                                                }}\r\n                                                inputStyle={{ color: 'white', padding: '0px' }}\r\n                                                style={{ backgroundColor: 'rgba(255,255,255,0.9)', width: '400px', marginTop: '28px', borderRadius: 10000, borderWidth: 5, borderColor: 'black' }}\r\n                                            />\r\n                                            : '')}\r\n                                            {isStaff && !isRecordingLink && <PrimaryButton onClick={postStream} variant='contained' color='primary' style={{ margin: 30 }} >Post recording link</PrimaryButton>}\r\n\r\n                                    </div>\r\n                                    <h4>What you'll learn </h4>\r\n                                    <ul>\r\n                                        <li>Key controversies over how prescription drugs are developed and marketed, and why those controversies exist </li>\r\n                                        <li> The FDA — its history, public health role, and rules affecting prescription drugs in the US </li>\r\n                                        <li> The process of discovering, testing, and approving innovative drugs, including various perspectives on the criteria used for drug approval </li>\r\n                                        <li> The cost of prescription drugs, including the factors affecting a drug’s market exclusivity period and the availability and use of affordable generic drugs </li>\r\n                                        <li>Safety evaluation of prescription drugs using “real world” data </li>\r\n                                        <li> Current topics stirring debate over the scope of FDA regulation, such as dietary supplements, special classes of prescription drugs, and “right to try” lawsthat allow patients to obtain drugs prior to FDA </li>\r\n                                    </ul>\r\n                                    <a href=\"#\" className=\"more-button\"><img src=\"images/more-icon.jpg\" />More </a>\r\n\r\n                                    <h4>Syllabus </h4>\r\n                                    <ul>\r\n                                        <li> <strong>Module 1:</strong> Overview and history of the FDA </li>\r\n                                        <li><strong>Module 2: </strong> Drug development and approval </li>\r\n                                        <li><strong> Module 3: </strong> Drug pricing in the United States </li>\r\n                                        <li><strong>Module 4: </strong>Marketing strategies </li>\r\n                                        <li><strong>Module 5: </strong> Post-approval evaluation  </li>\r\n                                        <li><strong> Module 6: </strong> Emerging medical technologies </li>\r\n                                    </ul>\r\n                                    <a href=\"#\" className=\"more-button\"><img src=\"images/more-icon.jpg\" />More </a>\r\n                                    <h4>Meet your instructors </h4>\r\n                                    <ul className=\"meet-ul\">\r\n                                        <li><div className=\"meet-img\"><img src=\"images/default_avatarpic.png\" /></div>\r\n                                            <div className=\"meet-text\"> <a href=\"#\">Aaron Kesselheim </a>\r\n                                                <p>Professor of Medicine, Director of the Program On Regulation, Therapeutics, And Law, Brigham and Women's Hospital </p>\r\n                                                <span>Harvard University </span>\r\n\r\n                                            </div>\r\n\r\n                                        </li>\r\n\r\n                                        <li><div className=\"meet-img\"><img src=\"images/default_avatarpic.png\" /></div>\r\n                                            <div className=\"meet-text\"> <a href=\"#\">Aaron Kesselheim </a>\r\n                                                <p>Professor of Medicine, Director of the Program On Regulation, Therapeutics, And Law, Brigham and Women's Hospital </p>\r\n                                                <span>Harvard University </span>\r\n\r\n                                            </div>\r\n\r\n                                        </li>\r\n\r\n                                        <li><div className=\"meet-img\"><img src=\"images/default_avatarpic.png\" /></div>\r\n                                            <div className=\"meet-text\"> <a href=\"#\">Aaron Kesselheim </a>\r\n                                                <p>Professor of Medicine, Director of the Program On Regulation, Therapeutics, And Law, Brigham and Women's Hospital </p>\r\n                                                <span>Harvard University </span>\r\n\r\n                                            </div>\r\n\r\n                                        </li>\r\n\r\n                                        <li><div className=\"meet-img\"><img src=\"images/default_avatarpic.png\" /></div>\r\n                                            <div className=\"meet-text\"> <a href=\"#\">Aaron Kesselheim </a>\r\n                                                <p>Professor of Medicine, Director of the Program On Regulation, Therapeutics, And Law, Brigham and Women's Hospital </p>\r\n                                                <span>Harvard University </span>\r\n\r\n                                            </div>\r\n\r\n                                        </li>\r\n                                    </ul>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"course-bottom-right\">\r\n                                    <ul className=\"list-group\">\r\n                                        <li>\r\n                                            <p><img src=\"images/ico_institute.jpg\" />Meeting <span dangerouslySetInnerHTML={{ __html: meetDetail !== \"No meeting scheduled\" ? meetDetail.rendered_body : meetDetail }} /> </p>\r\n                                        </li>\r\n\r\n                                        <li>\r\n                                            <p><img src=\"images/ico_subject.jpg\" />\r\n                                            Recorded\r\n                                            <span>{isRecordingLink ?\r\n                                                    <span dangerouslySetInnerHTML={{ __html: recordDetail !== \"No meeting scheduled\" ? recordDetail.rendered_body : meetDetail }} /> : \"-\"}</span> </p>\r\n                                        </li>\r\n\r\n                                        <li>\r\n                                            <p><img src=\"images/ico_institute.jpg\" />Language:<span>English</span> </p>\r\n                                        </li>\r\n\r\n                                        <li>\r\n                                            <p><img src=\"images/ico_institute.jpg\" />Video Transcript:<span>English</span> </p>\r\n                                        </li>\r\n\r\n                                        <li>\r\n                                            <p><img src=\"images/ico_video.jpg\" />Course Type:<span>Self-paced on your time</span> </p>\r\n                                        </li>\r\n                                    </ul>\r\n\r\n                                    <h4>Share this course </h4>\r\n                                    <img src=\"images/ico_share.jpg\" />\r\n\r\n                                    <h4>Prerequisites </h4>\r\n                                    <p>None </p>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <footer> Powered By VTeamLabs Open edX</footer> */}\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Post is successfull</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Recording is posted in the comments\r\n          </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(false)} color=\"primary\">\r\n                        Okay\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n})\r\nexport default Course\r\n","import React from 'react'\r\nimport '../App.css';\r\nimport { UserDetailsContext } from '../App';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Assessment() {\r\n    const { UserNameContext, EdxTokenContext, MsAuthTokenContext } = React.useContext(UserDetailsContext);\r\n    let history = useHistory();\r\n    React.useEffect(() => {\r\n        if (!UserNameContext.userName\r\n            || UserNameContext.userName === null\r\n            || UserNameContext.userName === undefined\r\n            || !EdxTokenContext.edxToken\r\n            || EdxTokenContext.edxToken === null\r\n            || EdxTokenContext.edxToken === undefined) {\r\n            history.push('/login?assessment', {path: '/assessment'});\r\n        }\r\n    }, []);\r\n\r\n    const isStaff = UserNameContext.userName === \"Laxmi\" ? true : false; // TODO - EDX API\r\n    const assessementType = UserNameContext.userName === \"Cristina\" ? 'Demo' : 'AI';\r\n    let noAssessment = false;\r\n    // NOTE - Hardcoded links for Demo Perspective\r\n    const studentAssessmentLink = assessementType === 'Demo' ? 'https://forms.office.com/Pages/ResponsePage.aspx?id=ULWMLnqAXE6BzmsGdAtt_v8yq2Ma9E5FhW7OrIb03ElUM1pBU0tPQzE3UDgwT1NKSFg3NTNTNEk4WC4u&embed=true'\r\n        : (assessementType === 'AI' ? 'https://forms.office.com/Pages/ResponsePage.aspx?id=ULWMLnqAXE6BzmsGdAtt_v8yq2Ma9E5FhW7OrIb03ElUN1dLSUtRR0w0TE9GRFFDWlZSSk9YRDUwQy4u&embed=true' : \"No assessment\");\r\n\r\n    const redirectToFormsView = ((type) => {\r\n        if (type === 'Demo') {\r\n            window.open('https://forms.office.com/Pages/DesignPage.aspx?fragment=FormId%3DULWMLnqAXE6BzmsGdAtt_v8yq2Ma9E5FhW7OrIb03ElUM1pBU0tPQzE3UDgwT1NKSFg3NTNTNEk4WC4u%26Token%3D8b8e7de4eefd4cd8bddafb2dc02ccd74', \"_blank\");\r\n        }\r\n        if (type === 'AI') {\r\n            window.open('https://forms.office.com/Pages/DesignPage.aspx?fragment=FormId%3DULWMLnqAXE6BzmsGdAtt_v8yq2Ma9E5FhW7OrIb03ElUN1dLSUtRR0w0TE9GRFFDWlZSSk9YRDUwQy4u%26Token%3Dbbe298a6eb6c4c7fa7990b5fe2be84d3', \"_blank\");\r\n        }\r\n        else {\r\n            noAssessment = true;\r\n        }\r\n    })\r\n\r\n    const assessement = isStaff ?\r\n        <div>\r\n            {!noAssessment && \r\n            <div>\r\n            <a style={{color:'rgb(169,39,109)'}} onClick={() => redirectToFormsView(\"AI\" )}><p className=\"assessmentText\">{\"Artificial Intelligence Assessment\"}</p></a>\r\n            <a style={{color:'rgb(169,39,109)'}} onClick={() => redirectToFormsView(\"Demo\")}><p className=\"assessmentText\">{\"Demo Assessment\"}</p></a>\r\n            </div>}\r\n            {noAssessment ? <p className=\"assessment\">{\"No assessment\"}</p> : <p className=\"assessment\">{\"Assessment will be viewed in different tab\"}</p>}\r\n        </div>\r\n        : studentAssessmentLink === \"No assessment\" ? <p className=\"assessmentText\">{\"No assessment\"}</p> :\r\n            <iframe title={assessementType} src={studentAssessmentLink} frameBorder=\"0\" marginWidth=\"0\" marginHeight=\"0\" className=\"assessmentFrame\" allowFullScreen> </iframe>\r\n\r\n    return (\r\n            <div className=\"App\">\r\n            <div class=\"main-content\">\r\n\r\n\r\n<div class=\"content-part\">\r\n    <div class=\"container-fluid\">\r\n\r\n        <h3 class=\"heading-strip\"> Assessment</h3>\r\n        <div class=\"class-form\">\r\n        {assessement}\r\n        </div>\r\n            {/* <footer> Powered By VTeamLabs Open edX</footer> */}\r\n        </div></div></div></div>\r\n    )\r\n}\r\n\r\nexport default Assessment\r\n","import React, { useState, useEffect } from 'react';\r\nimport MicrosoftLogin from \"react-microsoft-login\";\r\nimport Axios from 'axios';\r\nimport * as qs from 'querystring';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserDetailsContext } from '../App';\r\n\r\nconst UserAuth = (props) => {\r\n    const searchQuery = window.location.hash;\r\n    const { UserNameContext, EdxTokenContext, MsAuthTokenContext } = React.useContext(UserDetailsContext);\r\n    let history = useHistory();\r\n\r\n    let path = props && props.location && props.location.state &&\r\n        (props.location.state.path !== undefined || props.location.state.path !== null) ?\r\n        props.location.state.path : '/baseform';\r\n\r\n    // DEMO purpose code\r\n    if (searchQuery.includes('assessment')) {\r\n        path = '/assessment';\r\n    }\r\n    else if (searchQuery.includes('course'))\r\n        path = '/CourseList';\r\n    else {\r\n        path = '/baseform';\r\n    }\r\n\r\n    const edxTokenGenerator = (account, accessToken) => {\r\n        // let userName = \"\"\r\n        // let password = \"\"\r\n        // if (account.userName === \"Laxmi@vteamlabs.com\") {\r\n        //     userName =\"Laxmi\"\r\n        //     UserNameContext.setUserName(userName);\r\n        //     password = \"Vteam1234\"\r\n        // }\r\n        // else if (account.userName === \"Cristina@vteamlabs.com\" ) {\r\n        //     userName = \"CristinaStudent\"\r\n        //     UserNameContext.setUserName(userName);\r\n        //     password = \"Team@123\"\r\n        // }\r\n        // else if(account.userName === \"Jonas@vteamlabs.com\"){\r\n        //     userName = \"Jonas\"\r\n        //     UserNameContext.setUserName(userName);\r\n        //     password = \"Team@123\"\r\n        // } else {\r\n\r\n        // }\r\n\r\n\r\n        return Axios.post('https://edxvteam.com/oauth2/exchange_access_token/azuread-oauth2/',\r\n            qs.stringify({\r\n                // grant_type: \"password\",\r\n                // client_id: \"eSIp6KMW0CIMEDrjwDSJ3IhL5zcujcNF0aFoE0YY\",\r\n                // client_secret: \"vTUI81eTQbD8Vt7ZM7fVNEgH1VL5r4sEVqy76cwXrdEaI49D8IMpRy4HgJhbJhQA2AbPRhwwvxHvsVWRfTJZnoIgacBp1870ZvdqSm5yqDD8eXb8JTuUfDoy3fh1AlK4\",\r\n                // token_type: \"Bearer\",\r\n                // username: userName,\r\n                // password: password\r\n                client_id: \"fJeK3hLJ93ldqFwyBZ2MhqXTTBO5dgNRwxLxN5T9\",\r\n                access_token: accessToken\r\n            }),\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            }).then((response) => {\r\n                EdxTokenContext.setEdxToken(response.data.access_token)\r\n                userDetails(response.data.access_token)\r\n                // Axios.get('https://edxvteam.com/api/user/v1/accounts?email=' + account.userName,\r\n                //     {\r\n                //         headers: {\r\n                //             Authorization: `Bearer ${response.data.access_token}`\r\n                //         }\r\n                //     })\r\n                //     .then((response) => {\r\n                //         let edxUser = response.data[0];\r\n                //         UserNameContext.setUserName(edxUser.username);\r\n                //         // if (account.userName === \"Cristina@vteamlabs.com\") {\r\n                //         //     UserNameContext.setUserName(\"Cristina\");\r\n                //         // }\r\n                //         // else if (account.userName === \"Jones@vteamlabs.com\") {\r\n                //         //     UserNameContext.setUserName(\"Jones\");\r\n                //         // }\r\n                //         // else {\r\n                //         //     UserNameContext.setUserName(edxUser.username);\r\n                //         // }\r\n                //         console.log(UserNameContext.userName)\r\n                //         history.push(path)\r\n                //     }, (error) => {\r\n                //         console.log(error)\r\n                //     })\r\n            }, (error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const authHandler = (err, data) => {\r\n        try {\r\n            const { accessToken, account } = data.authResponseWithAccessToken;\r\n            console.log(account.userName)\r\n            if (accessToken !== null) {\r\n                MsAuthTokenContext.setMsAuthToken(accessToken);\r\n                edxTokenGenerator(account, accessToken);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const userDetails = (access_token) => {\r\n        Axios.get('https://edxvteam.com/api/user/v1/me',\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${access_token}`\r\n                }\r\n            }).then((response) => {\r\n                let edxUser = response.data;\r\n                UserNameContext.setUserName(edxUser.username);\r\n                history.push(path)\r\n            }, (error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    return (<MicrosoftLogin\r\n        clientId={'c4e63d26-dcf1-4d0a-bac1-ae0bc5afca83'}\r\n        authCallback={authHandler} redirectUri={'https://ankagr289.github.io/#/login'}\r\n        graphScopes={['Calendars.ReadWrite', 'Group.ReadWrite.All', 'user.read']} />)\r\n};\r\n\r\nexport default UserAuth","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  HashRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ClassSchedule from './Components/ClassSchedule';\r\nimport CourseList from './Components/CourseList';\r\nimport Course from './Components/Course';\r\nimport Assessment from './Components/Assessments';\r\nimport UserAuth from './Components/UserAuth';\r\n// import 'fonts/fonts.scss';\r\n// import 'common/css/common.scss';\r\nimport './font-awesome.css';\r\n// import 'common/css/style.css';\r\n// import 'common/css/bootstrap.min.css';\r\n// import 'common/css/icons.css';\r\n\r\nexport const UserDetailsContext = React.createContext(null);\r\n\r\nfunction App() {\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [edxToken, setEdxToken] = React.useState('');\r\n  const [msAuthToken, setMsAuthToken] = React.useState('');\r\n  const UserNameContext = { userName, setUserName };\r\n  const EdxTokenContext = { edxToken, setEdxToken };\r\n  const MsAuthTokenContext = { msAuthToken, setMsAuthToken };\r\n\r\n  return (\r\n    <Router>\r\n      {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. Use a <Switch> any time\r\n          you have multiple routes, but you want only one\r\n          of them to render at a time\r\n        */}\r\n      <UserDetailsContext.Provider value={{ UserNameContext, EdxTokenContext, MsAuthTokenContext }}>\r\n        {/* <Switch>\r\n          <Route path=\"/login\"\r\n              render={(props) => <UserAuth {...props} />}>\r\n            </Route>\r\n          <Route exact path=\"/baseform\">\r\n            <ClassSchedule />\r\n          </Route>\r\n          <Route path=\"/CourseList\">\r\n            <CourseList />\r\n          </Route>\r\n          <Route path=\"/Course\"\r\n            render={(props) => <Course {...props} />}\r\n          >\r\n          </Route>\r\n          <Route path=\"/assessment\">\r\n            <Assessment />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/baseform\" />\r\n          </Route>\r\n\r\n        </Switch> */}\r\n        <HashRouter basename=\"/\">\r\n          <div>\r\n            {/* <ul>\r\n              <li><Link to=\"/\">Home</Link></li>\r\n              <li><Link to=\"/about\">About</Link></li>\r\n            </ul>\r\n            <Link\r\n              to={{\r\n                pathname: \"/Course\",\r\n                search: \"?sort=name\",\r\n                hash: \"#the-hash\",\r\n                state: { course : ...props }\r\n              }}\r\n            /> */}\r\n\r\n\r\n            <Route path=\"/login\"\r\n              render={(props) => <UserAuth {...props} />}>\r\n            </Route>\r\n            <Route exact path=\"/baseform\">\r\n              <ClassSchedule />\r\n            </Route>\r\n            <Route path=\"/CourseList\">\r\n              <CourseList />\r\n            </Route>\r\n            <Route path=\"/Course\"\r\n              render={(props) => <Course {...props} />}\r\n            >\r\n            </Route>\r\n            <Route path=\"/assessment\">\r\n              <Assessment />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/baseform\" />\r\n            </Route>\r\n          </div>\r\n        </HashRouter>\r\n      </UserDetailsContext.Provider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}